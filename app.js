// Generated by CoffeeScript 1.8.0
(function() {
  var Model, argv, db, js2coffee, m;

  db = require("./mysql");

  js2coffee = require('js2coffee');

  argv = require('optimist').argv;

  Model = (function() {
    function Model(tableName) {
      this.tableName = tableName;
    }

    Model.prototype.descSql = function() {
      var self;
      self = this;
      return db.query("DESC " + self.tableName, function(err, row) {
        var code, content, end, i, js, tmp, _i, _len;
        if (err) {
          return console.log(err);
        }
        code = [];
        for (_i = 0, _len = row.length; _i < _len; _i++) {
          i = row[_i];
          tmp = {};
          tmp["name"] = i.Field;
          tmp["type"] = self.checkType(i.Type);
          tmp["defaultValue"] = i.Default;
          if (i.Key === 'PRI') {
            tmp["primaryKey"] = true;
            delete tmp["defaultValue"];
          }
          code.push(tmp);
        }
        js = JSON.stringify(code);
        content = js2coffee.build(js, {
          show_src_lineno: false,
          indent: "  "
        });
        end = self.filterType(content);
        console.log(end);
        return db.end();
      });
    };

    Model.prototype.checkType = function(test) {
      if (test.indexOf("int") > -1) {
        return 'T.Type.Integer';
      }
      if (test.indexOf("char") > -1) {
        return 'T.Type.String';
      }
      if (test.indexOf("decimal") > -1) {
        return 'T.Type.Float';
      }
      if (test.indexOf("text") > -1) {
        return 'T.Type.Json';
      }
      return 'T.Type.String';
    };

    Model.prototype.filterType = function(test) {
      var four, one, three, tow;
      one = test.replace(/"T.Type.Integer"/g, "T.Type.Integer");
      tow = one.replace(/"T.Type.String"/g, "T.Type.String");
      three = tow.replace(/"T.Type.Float"/g, "T.Type.Float");
      four = three.replace(/"T.Type.Json"/g, "T.Type.Json");
      return four;
    };

    return Model;

  })();

  m = new Model('note');

  m.descSql();

}).call(this);

//# sourceMappingURL=app.js.map
