// Generated by CoffeeScript 1.8.0
(function() {
  var T, checkType, db, filterType, js2coffee;

  db = require("./mysql");

  T = require("toshihiko");

  js2coffee = require('js2coffee');

  db.query("DESC region", function(err, row) {
    var content, end, i, js, seller, tmp, _i, _len;
    if (err) {
      return console.log(err);
    }
    seller = [];
    for (_i = 0, _len = row.length; _i < _len; _i++) {
      i = row[_i];
      tmp = {};
      tmp["name"] = i.Field;
      tmp["type"] = checkType(i.Type);
      tmp["defaultValue"] = i.Default;
      if (i.Key) {
        tmp["primaryKey"] = true;
      }
      seller.push(tmp);
    }
    js = JSON.stringify(seller);
    content = js2coffee.build(js, {
      show_src_lineno: false,
      indent: "  "
    });
    end = filterType(content);
    return console.log(end);
  });

  checkType = function(test) {
    if (test.indexOf("int") > -1) {
      return 'T.Type.Integer';
    }
    if (test.indexOf("char") > -1) {
      return 'T.Type.String';
    }
    if (test.indexOf("decimal") > -1) {
      return 'T.Type.Float';
    }
    return 'T.Type.String';
  };

  filterType = function(test) {
    var one, three, tow;
    one = test.replace(/"T.Type.Integer"/g, "T.Type.Integer");
    tow = one.replace(/"T.Type.String"/g, "T.Type.String");
    three = tow.replace(/"T.Type.Float"/g, "T.Type.Float");
    return three;
  };

}).call(this);

//# sourceMappingURL=app.js.map
